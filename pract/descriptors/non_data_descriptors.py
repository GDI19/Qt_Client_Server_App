print(' ------------ Non-data-дескриптор ---------------')
class GetonlyDesc:
    ''' Non-data дескриптор
    '''
    def __get__(self, obj, cls=None):
        return '**magic-descriptor**'
class C:
    ''' Класс с одним дескриптором
    '''
    d = GetonlyDesc()

cobj = C()

# При доступе к атрибуту будет вызван метод __get__ дескриптора
x = cobj.d
print('0. Содержимое объекта в самом начале:', cobj.__dict__)
print('1. Значение атрибута (доступ через дескриптор):', x)

# Создание атрибута в словаре экземпляра класса (дескриптор)
cobj.d = "setting a value"
x = cobj.d
print('2. Значение атрибута (доступ через __dict__):', x)
print('3. Содержимое объекта после установки атрибута:', cobj.__dict__)

cobj2 =C()
cobj2.d = 2
y = cobj2.d
print('2.2. Значение `y` атрибута (доступ через __dict__):', y)
print('3.2. Содержимое 2-го объекта после установки атрибута:', cobj2.__dict__)



# Удаление атрибута из словаря экземпляра класса
del cobj.d
print('4. Содержимое объекта после удаления атрибута:', cobj.__dict__)
x = C.d
print('5. Значение атрибута C.d:', x)

# # Дескриптор будет заменён обычной строкой на уровне класса
# C.d = "setting a value on class"
# print('6. Значение атрибута C.d:', C.d)

